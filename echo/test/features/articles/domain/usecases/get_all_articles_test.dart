import 'package:dartz/dartz.dart';
import 'package:echo/features/articles/domain/entities/article.dart';
import 'package:echo/features/articles/domain/repositories/article_repository.dart';
import 'package:echo/features/articles/domain/usecases/get_all_articles.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:mockito/annotations.dart';
import 'package:mockito/mockito.dart';

/// "get_all_articles_test.mocks.dart" file is generated by running the command: [dart run build_runner build]
/// Don't worry about import errors about "MockArticleRepository" that appear before running the command
import 'get_all_articles_test.mocks.dart';

@GenerateMocks([ArticleRepository])
void main() {
  late GetAllArticles usecase;
  late MockArticleRepository mockArticleRepository;

  setUp(() {
    mockArticleRepository = MockArticleRepository();
    usecase = GetAllArticles(mockArticleRepository);
  });

  final tArticles = <Article>[];

  test('should get list of articles from repository', () async {
    when(mockArticleRepository.getArticles()).thenAnswer((_) async {
      return Right(tArticles);
    });

    final result = await usecase();

    expect(result, equals(Right(tArticles)));

    verify(mockArticleRepository.getArticles());
    verifyNoMoreInteractions(mockArticleRepository);
  });
}
